name: Build And Push Images

on:
  workflow_call:
    inputs:
      php_version:
        required: true
        type: string
      environment:
        description: 'Environment to build images against'
        type: string
        required: true

env:
  PHP_VERSION: ${{ inputs.php_version }}
  PHP_EXT_NAMESPACE: "${{ vars.PUSH_TO_DOCKERHUB == 'true' && vars.DOCKERHUB_NAMESPACE || '' }}"

jobs:
  image_context:
    name: Generate Image Context
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      matrix: ${{ steps.extract_context.outputs.context }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Extract Image Context
        id: extract_context
        uses: ./.github/actions/extract-image-context-action
        with:
          php_version: ${{ env.PHP_VERSION }}
          php_ext_namespace: ${{ env.PHP_EXT_NAMESPACE }}
          php_type: ${{ vars.PHP_TYPE }}

  build_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: ${{ fromJSON(needs.image_context.outputs.matrix)[0] != null  }}
    environment: ${{ inputs.environment }}
    needs: ['image_context']
    strategy:
      matrix:
        include: ${{ fromJSON(needs.image_context.outputs.matrix) }}

    permissions:
      packages: write
      contents: read
      id-token: write
      attestations: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        if: ${{ vars.PUSH_TO_DOCKERHUB == 'true'  }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.PHP_EXT_NAMESPACE }}/php
            ghcr.io/${{ github.actor }}/php
          tags: |
            type=raw,value=${{ matrix.phpExtTag }}enable=true

      # - name: Build and push Docker image
      #   id: push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ${{ matrix.dockerFile }}
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     annotations: ${{ steps.meta.outputs.annotations }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

      - name: Print context
        run: |
          echo "phpTag ${{ matrix.phpTag }} / phpExtTag ${{ matrix.phpExtTag }} / dockerFile ${{ matrix.dockerFile }}"
